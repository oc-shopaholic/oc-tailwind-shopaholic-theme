title = "Catalog List"
url = "/catalog/:category?"
layout = "main"
is_hidden = 0

[CategoryPage]
slug = "{{ :category }}"
slug_required = 0
smart_url_check = 0

[ProductList]
sorting = "popularity|desc"

[Pagination]
count_per_page = 15
pagination_limit = 5
active_class = "pagination__link_current"
button_list = "first,first-more,main,last-more,last"
first_button_name = "First"
first_button_limit = 3
first_button_number = 1
first-more_button_name = "..."
first-more_button_limit = 4
prev_button_name = "Prev"
prev_button_limit = 1
prev-more_button_name = "..."
prev-more_button_limit = 1
next-more_button_name = "..."
next-more_button_limit = 1
next_button_name = "Next"
next_button_limit = 1
last-more_button_name = "..."
last-more_button_limit = 4
last_button_name = "Last"
last_button_limit = 3
last_button_number = 1
==
<?php
function onInit()
{
    $arBreadcrumbs = [
        ['name' => 'Catalog', 'url' => \Cms\Classes\Page::url('product-list', ['category' => false])],
    ];

    //Get category object
    $obCategory = $this->CategoryPage->get();

    //Get price filter
    $arPriceFilterValue = explode('|', input('price'));
    $fMinPriceFilterValue = array_get($arPriceFilterValue, 0);
    $fMaxPriceFilterValue = array_get($arPriceFilterValue, 1);

    //Get width filter
    $arWidthFilterValue = explode('|', input('width'));
    $fMinWidthFilterValue = array_get($arWidthFilterValue, 0);
    $fMaxWidthFilterValue = array_get($arWidthFilterValue, 1);

    //Get filter by properties
    $arFilterValue = (array) input('property');
    if (!empty($arFilterValue)) {
        foreach($arFilterValue as $sKey => &$sValue) {
            $sValue = explode('|', $sValue);
        }
    }

    $arFilterValueWithoutProperty = [];

    $sActiveSorting = $this->ProductList->getSorting();
    $iPage = $this->Pagination->getPageFromRequest();
    $obProductList = $this->ProductList->make()->active()->sort($sActiveSorting);

    if (!empty($obCategory)) {
        $obCategoryProductList = $obProductList->category($obCategory->id, true);
        $arBreadcrumbs[] = ['name' => $obCategory->name, 'url' => $obCategory->getPageUrl('product-list')];
        $obProductPropertyList = $obCategory->product_filter_property;
        $obOfferPropertyList = $obCategory->offer_filter_property;

        foreach($obProductPropertyList->getIDList() as $iPropertyID) {
            $arFilterValueTemp = $arFilterValue;
            if (isset($arFilterValueTemp[$iPropertyID])) {
                unset($arFilterValueTemp[$iPropertyID]);
            }

            $arFilterValueWithoutProperty[$iPropertyID] = $arFilterValueTemp;
        }

        foreach($obOfferPropertyList->getIDList() as $iPropertyID) {
            $arFilterValueTemp = $arFilterValue;
            if (isset($arFilterValueTemp[$iPropertyID])) {
                unset($arFilterValueTemp[$iPropertyID]);
            }

            $arFilterValueWithoutProperty[$iPropertyID] = $arFilterValueTemp;
        }

        $obProductList = $obProductList->copy()
            ->filterByProperty($arFilterValue, $obProductPropertyList)
            ->filterByProperty($arFilterValue, $obOfferPropertyList);
    }

    $obProductList = $obProductList->copy()->filterByPrice($fMinPriceFilterValue, $fMaxPriceFilterValue);

    $arProductList = $obProductList->page($iPage, $this->Pagination->getCountPerPage());
    $iMaxPage = $this->Pagination->getMaxPage($obProductList->count());
    
    $this['fMinPriceFilterValue'] = $fMinPriceFilterValue;
    $this['fMaxPriceFilterValue'] = $fMaxPriceFilterValue;

    $this['fMinWidthFilterValue'] = $fMinWidthFilterValue;
    $this['fMaxWidthFilterValue'] = $fMaxWidthFilterValue;
    
    $this['obProductPropertyList'] = $obProductPropertyList;
    $this['iMaxPage'] = $iMaxPage;
    $this['arFilterValue'] = $arFilterValue;
    $this['arFilterValueWithoutProperty'] = $arFilterValueWithoutProperty;
    $this['iPage'] = $iPage;
    $this['obProductList'] = $obProductList;
    $this['arProductList'] = $arProductList;
    $this['obCategory'] = $obCategory;
    $this['arBreadcrumbs'] = $arBreadcrumbs;
}
?>
==
{##}

{% partial 'breadcrumbs/breadcrumbs' %}
<div class="flex justify-between flex-col md:flex-row">
    {% partial 'product-list/filter/filter' %}
    <div class="w-full">
        <div class="flex items-center justify-between mb-5 md:mb-16 md:justify-end">
            <p class="cursor-pointer">Sort by:&nbsp; &nbsp; &nbsp; Price Low to High</p>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" clip-rule="evenodd"
                    d="M5.29279 7.29296C5.48031 7.10549 5.73462 7.00017 5.99979 7.00017C6.26495 7.00017 6.51926 7.10549 6.70679 7.29296L9.99979 10.586L13.2928 7.29296C13.385 7.19745 13.4954 7.12127 13.6174 7.06886C13.7394 7.01645 13.8706 6.98886 14.0034 6.98771C14.1362 6.98655 14.2678 7.01186 14.3907 7.06214C14.5136 7.11242 14.6253 7.18667 14.7192 7.28056C14.8131 7.37446 14.8873 7.48611 14.9376 7.60901C14.9879 7.7319 15.0132 7.86358 15.012 7.99636C15.0109 8.12914 14.9833 8.26036 14.9309 8.38236C14.8785 8.50437 14.8023 8.61471 14.7068 8.70696L10.7068 12.707C10.5193 12.8944 10.2649 12.9997 9.99979 12.9997C9.73462 12.9997 9.48031 12.8944 9.29279 12.707L5.29279 8.70696C5.10532 8.51943 5 8.26512 5 7.99996C5 7.7348 5.10532 7.48049 5.29279 7.29296Z"
                    fill="#374151" />
            </svg>
        </div>
        {% partial 'product-list/product-list' %}
    </div>
</div>

